[build-system]
requires = ["setuptools", "pytest-runner==5.2"]

[project]
name = "slack_bolt"
dynamic = ["version", "readme"]
description = "The Bolt Framework for Python"
license = { text = "MIT" }
authors = [{ name = "Slack Technologies, LLC", email = "opensource@slack.com" }]
dependencies = ["slack_sdk>=3.25.0,<4"]
classifiers = [
	"Programming Language :: Python :: 3.6",
	"Programming Language :: Python :: 3.7",
	"Programming Language :: Python :: 3.8",
	"Programming Language :: Python :: 3.9",
	"Programming Language :: Python :: 3.10",
	"Programming Language :: Python :: 3.11",
	"Programming Language :: Python :: 3.12",
	"Programming Language :: Python :: Implementation :: CPython",
	"License :: OSI Approved :: MIT License",
	"Operating System :: OS Independent",
]
requires-python = ">=3.6"

[project.optional-dependencies]
# pip install -e ".[async]"
async = [
	# async features heavily depends on aiohttp
	"aiohttp>=3,<4",
	# Socket Mode 3rd party implementation
	"websockets>=8,<10; python_version=='3.6'",
	"websockets>=10,<11; python_version>'3.6'",
]
# pip install -e ".[adapter]"
# NOTE: any of async ones requires pip install -e ".[async]" too
adapter = [
	# used only under src/slack_bolt/adapter
	"boto3<=2",
	"bottle>=0.12,<1",
	"chalice<=1.27.3; python_version=='3.6'",
	"chalice>=1.28,<2; python_version>'3.6'",
	"CherryPy>=18,<19",
	"Django>=3,<5",
	"falcon>=2,<4; python_version<'3.11'",
	"falcon>=3.1.1,<4; python_version>='3.11'",
	"fastapi>=0.70.0,<1",
	"Flask>=1,<3",
	"Werkzeug>=2,<3",
	"pyramid>=1,<3",
	"sanic>=20,<21; python_version=='3.6'",
	"sanic>=22,<23; python_version>'3.6'",
	"starlette>=0.14,<1",
	"tornado>=6,<7",
	"uvicorn<1",                                # The oldest version can vary among Python runtime versions
	"gunicorn>=20,<21",
	"websocket_client>=1.2.3,<2",               # Socket Mode 3rd party implementation
]
# pip install -e ".[testing]"
testing = [
	"pytest>=6.2.5,<7",
	"pytest-cov>=3,<4",
	"Flask-Sockets>=0.2,<1",     # TODO: This module is not yet Flask 2.x compatible
	"Werkzeug>=1,<2",            # TODO: Flask-Sockets is not yet compatible with Flask 2.x
	"itsdangerous==2.0.1",       # TODO: Flask-Sockets is not yet compatible with Flask 2.x
	"Jinja2==3.0.3",             # https://github.com/pallets/flask/issues/4494
	"black==22.8.0",             # Until we drop Python 3.6 support, we have to stay with this version
	"click<=8.0.4",              # black is affected by https://github.com/pallets/click/issues/2225
	"pytest-asyncio>=0.18.2,<1",
	"aiohttp>=3,<4",
]
# pip install -e ".[adapter_testing]"
adapter_testing = [
	"moto>=3,<4",                               # For AWS tests
	"docker>=5,<6",                             # Used by moto
	"boddle>=0.2,<0.3",                         # For Bottle app tests
	"Flask>=1,<2",                              # TODO: Flask-Sockets is not yet compatible with Flask 2.x
	"Werkzeug>=1,<2",                           # TODO: Flask-Sockets is not yet compatible with Flask 2.x
	"sanic-testing>=0.7; python_version>'3.6'",
	"requests>=2,<3",                           # For Starlette's TestClient
]

[project.urls]
Repository = "https://github.com/slackapi/bolt-python"

[tool.setuptools.packages.find]
exclude = ["examples", "integration_tests", "tests", "tests.*", "falcon"]

[tool.setuptools.dynamic]
version = { attr = "slack_bolt.version.__version__" }
readme = { file = ["README.md"], content-type = "text/markdown" }


[tool.black]
line-length = 125

[tool.pytest.ini_options]
log_file = "logs/pytest.log"
log_file_level = "DEBUG"
log_format = "%(asctime)s %(levelname)s %(message)s"
log_date_format = "%Y-%m-%d %H:%M:%S"
filterwarnings = [
	"ignore:\"@coroutine\" decorator is deprecated since Python 3.8, use \"async def\" instead:DeprecationWarning",
	"ignore:The loop argument is deprecated since Python 3.8, and scheduled for removal in Python 3.10.:DeprecationWarning",
]
asyncio_mode = "auto"
testpaths = ["tests"]

[tool.distutils.bdist_wheel]
universal = true
